<Page
    x:Class="TeamCityMonitor.Views.MonitorPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TeamCityMonitor.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:i="using:Interfaces"
    xmlns:interfaces="using:TeamCityMonitor.Interfaces"
    xmlns:localConverters="using:TeamCityMonitor.Converters"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance i:ISetupViewModel, IsDesignTimeCreatable=False}">
    
    <Page.Resources>
        <converters:StringFormatConverter x:Key="StringFormat"/>
        <converters:BoolToVisibilityConverter x:Key="VisibleIfTrue" TrueValue="Visible" FalseValue="Collapsed"/>
        <converters:BoolToVisibilityConverter x:Key="VisibleIfFalse" TrueValue="Collapsed" FalseValue="Visible"/>
        <localConverters:ColorToSolidBrushConverter x:Key="ToBrush"/>
    </Page.Resources>

    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton Label="Back" Icon="Back" Command="{x:Bind GoBack}" Visibility="{x:Bind GoBack, Converter={StaticResource HideIfNull}}"/>
            <AppBarButton Label="Update" Icon= "Refresh" Command="{x:Bind ViewModel.Refresh}"/>
            <AppBarToggleButton Label="Auto-Update" Icon="Clock" IsChecked="{x:Bind ViewModel.AutoRefresh, Mode=TwoWay}"/>
        </CommandBar>
    </Page.BottomAppBar>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <StackPanel Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignRightWithPanel="True">
            <Slider VerticalAlignment="Center" TickPlacement="None" Value="{x:Bind ViewModel.Brightness, Mode=TwoWay}" Minimum="0" Maximum="100" Width="300"/>
            <Border Background="DarkGray" CornerRadius="15" BorderBrush="#333" BorderThickness="5">
                <Grid Width="300" Height="300" Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <local:LedIndicator Grid.Row="3" Grid.Column="1" R="{x:Bind ViewModel.Device.CurrentColors[0], Mode=OneWay}" G="{x:Bind ViewModel.Device.CurrentColors[1], Mode=OneWay}" B="{x:Bind ViewModel.Device.CurrentColors[2], Mode=OneWay}" Brightness="{x:Bind ViewModel.Brightness, Mode=OneWay}"/>
                    <local:LedIndicator Grid.Row="2" Grid.Column="0" R="{x:Bind ViewModel.Device.CurrentColors[3], Mode=OneWay}" G="{x:Bind ViewModel.Device.CurrentColors[4], Mode=OneWay}" B="{x:Bind ViewModel.Device.CurrentColors[5], Mode=OneWay}" Brightness="{x:Bind ViewModel.Brightness, Mode=OneWay}"/>
                    <local:LedIndicator Grid.Row="1" Grid.Column="0" R="{x:Bind ViewModel.Device.CurrentColors[6], Mode=OneWay}" G="{x:Bind ViewModel.Device.CurrentColors[7], Mode=OneWay}" B="{x:Bind ViewModel.Device.CurrentColors[8], Mode=OneWay}" Brightness="{x:Bind ViewModel.Brightness, Mode=OneWay}"/>
                    <local:LedIndicator Grid.Row="0" Grid.Column="1" R="{x:Bind ViewModel.Device.CurrentColors[9], Mode=OneWay}" G="{x:Bind ViewModel.Device.CurrentColors[10], Mode=OneWay}" B="{x:Bind ViewModel.Device.CurrentColors[11], Mode=OneWay}" Brightness="{x:Bind ViewModel.Brightness, Mode=OneWay}"/>
                    <local:LedIndicator Grid.Row="0" Grid.Column="2" R="{x:Bind ViewModel.Device.CurrentColors[12], Mode=OneWay}" G="{x:Bind ViewModel.Device.CurrentColors[13], Mode=OneWay}" B="{x:Bind ViewModel.Device.CurrentColors[14], Mode=OneWay}" Brightness="{x:Bind ViewModel.Brightness, Mode=OneWay}"/>
                    <local:LedIndicator Grid.Row="1" Grid.Column="3" R="{x:Bind ViewModel.Device.CurrentColors[15], Mode=OneWay}" G="{x:Bind ViewModel.Device.CurrentColors[16], Mode=OneWay}" B="{x:Bind ViewModel.Device.CurrentColors[17], Mode=OneWay}" Brightness="{x:Bind ViewModel.Brightness, Mode=OneWay}"/>
                    <local:LedIndicator Grid.Row="2" Grid.Column="3" R="{x:Bind ViewModel.Device.CurrentColors[18], Mode=OneWay}" G="{x:Bind ViewModel.Device.CurrentColors[19], Mode=OneWay}" B="{x:Bind ViewModel.Device.CurrentColors[20], Mode=OneWay}" Brightness="{x:Bind ViewModel.Brightness, Mode=OneWay}"/>
                    <local:LedIndicator Grid.Row="3" Grid.Column="2" R="{x:Bind ViewModel.Device.CurrentColors[21], Mode=OneWay}" G="{x:Bind ViewModel.Device.CurrentColors[22], Mode=OneWay}" B="{x:Bind ViewModel.Device.CurrentColors[23], Mode=OneWay}" Brightness="{x:Bind ViewModel.Brightness, Mode=OneWay}"/>
                </Grid>
            </Border>
        </StackPanel>
        <ItemsControl RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignTopWithPanel="True" ItemsSource="{x:Bind ViewModel.BuildMonitors}">
            <ItemsControl.ItemTemplate>
                <DataTemplate x:DataType="interfaces:IBuildMonitor">
                    <StackPanel Margin="10,5">
                        <TextBlock>
                            <Run Text="{x:Bind Status.Name, Mode=OneWay}" FontWeight="Bold"/>
                            <Run Text="   "/>
                            <Run Text="{x:Bind Status.LastUpdated, Mode=OneWay}"/>
                        </TextBlock>
                        <TextBlock Text="{x:Bind Status.LastChanged}" Visibility="{x:Bind Status.IsStale, Mode=OneWay, Converter={StaticResource VisibleIfFalse}}"/>
                        <TextBlock Text="{x:Bind Status.LastChanged}" Foreground="{x:Bind Setup.Stale, Converter={StaticResource ToBrush}}" Visibility="{x:Bind Status.IsStale, Mode=OneWay, Converter={StaticResource VisibleIfTrue}}"/>
                        <TextBlock Text="{x:Bind Status.ErrorMessage, Mode=OneWay}" Visibility="{x:Bind Status.IsApiError, Mode=OneWay, Converter={StaticResource VisibleIfTrue}}"/>
                        <TextBlock Text="{x:Bind Status.StatusText, Mode=OneWay}" Foreground="{x:Bind Setup.Success, Converter={StaticResource ToBrush}}" Visibility="{x:Bind Status.IsSuccessful, Mode=OneWay, Converter={StaticResource VisibleIfTrue}}"/>
                        <TextBlock Text="{x:Bind Status.StatusText, Mode=OneWay}" Foreground="{x:Bind Setup.Failure, Converter={StaticResource ToBrush}}" Visibility="{x:Bind Status.IsSuccessful, Mode=OneWay, Converter={StaticResource VisibleIfFalse}}"/>
                        <TextBlock Foreground="{x:Bind Setup.Investigating, Converter={StaticResource ToBrush}}" Visibility="{x:Bind Status.IsUnderInvestigation, Mode=OneWay, Converter={StaticResource VisibleIfTrue}}">
                            <Run Text="Investigator: "/>
                            <Run Text="{x:Bind Status.Investigator, Mode=OneWay}"/>
                        </TextBlock>
                        <TextBlock Text="Running" Foreground="{x:Bind Setup.Running, Converter={StaticResource ToBrush}}" Visibility="{x:Bind Status.IsRunning, Mode=OneWay, Converter={StaticResource VisibleIfTrue}}"/>
                        <TextBlock Text="Queued" Foreground="{x:Bind Setup.Queued, Converter={StaticResource ToBrush}}" Visibility="{x:Bind Status.IsQueued, Mode=OneWay, Converter={StaticResource VisibleIfTrue}}"/>
                    </StackPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </RelativePanel>
</Page>
